<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SOFAMOSN on SOFAStack</title>
    <link>/en/projects/sofa-mosn/</link>
    <description>Recent content in SOFAMOSN on SOFAStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="/en/projects/sofa-mosn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview</title>
      <link>/en/projects/sofa-mosn/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/projects/sofa-mosn/overview/</guid>
      <description>MOSN, the short name of Modular Observable Smart Network, is a powerful proxy acting as Service Mesh&amp;rsquo;s data plane like Envoy but written in Go. MOSN supports Envoy and Istio&amp;rsquo;s APIs and can be integrated with Istio, so we use MOSN instead of Envoy in SOFAMesh. The initial version of MOSN was jointly contributed by Ant Financial and UC Business Unit of Alibaba, and we look forward to the community to participate in the follow-up development and build an open source excellent project together.</description>
    </item>
    
    <item>
      <title>Project sample</title>
      <link>/en/projects/sofa-mosn/quick-start-run-samples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/projects/sofa-mosn/quick-start-run-samples/</guid>
      <description> Configure HTTP protocol Mesher  See the sample project that MOSN forwards HTTP http-sample.   Configure SOFARPC protocol Mesher  See the sample project that MOSN forwards SOFARPC sofarpc-sample.  Configure TCP protocol Mesher  See the sample project that MOSN serves as a TCP Proxy tcpproxy-sample.  </description>
    </item>
    
    <item>
      <title>Quick start guide</title>
      <link>/en/projects/sofa-mosn/quick-start-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/projects/sofa-mosn/quick-start-setup/</guid>
      <description>This article is intended to help developers who are new to the MOSN project to quickly build a development environment, and compile, test, package, and run sample code.
Note: MOSN is developed based on Go 1.9.2 and uses dep for dependency management.
Prepare running environment  If you use a container to run MOSN, you must install Docker first. If you use a local machine, you must use a Unix-like environment.</description>
    </item>
    
    <item>
      <title>SOFAMosn 0.1.0 performance report</title>
      <link>/en/projects/sofa-mosn/reference-performance-report010/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/projects/sofa-mosn/reference-performance-report010/</guid>
      <description>Instructions on performance report The following performance report presents the performance comparison data of SOFAMosn 0.1.0 with envoy in terms of pure TCP forwarding for Bolt and HTTP1.x protocols, mainly including QPS, RTT, failure rate, success rate and other indicators.
It is significant to note the following optimizations in v0.1.0 which are intended to improve the forwarding performance of SOFAMosn.
 For thread model, SOFAMosn uses the worker goroutine pool to handle stream events, and uses two independent goroutines to handle read and write IO separately.</description>
    </item>
    
    <item>
      <title>Use SOFAMosn to build Service Mesh platform</title>
      <link>/en/projects/sofa-mosn/quick-start-run-with-sofamesh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/projects/sofa-mosn/quick-start-run-with-sofamesh/</guid>
      <description>This article introduces how to use SOFAMosn to build the Service Mesh development environment based on SOFAMesh framework, and verify some basic capabilities of SOFAMosn, such as routing and load balancing. This article includes the following content:
 Relationship between SOFAMosn and SOFAMesh Preparations Deploy SOFAMesh with source codes Bookinfo experiment  Relationship between SOFAMosn and SOFAMesh As mentioned in SOFAMosn introduction, SOFAMosn is a Service Mesh data plane agent developed with Golang, and SOFAMesh is a large-scale implementation solution for Service Mesh, which is improved and extended based on Istio.</description>
    </item>
    
  </channel>
</rss>