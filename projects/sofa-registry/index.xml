<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SOFARegistry on SOFAStack</title>
    <link>/projects/sofa-registry/</link>
    <description>Recent content in SOFARegistry on SOFAStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="/projects/sofa-registry/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java SDK</title>
      <link>/projects/sofa-registry/java-sdk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/java-sdk/</guid>
      <description>1. Maven 坐标 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alipay.sofa&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;registry-client-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${registry.client.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 2. 创建 SOFARegistry 客户端实例 构建 SOFARegistry 客户端实例的关键代码如下： RegistryClientConfig config = DefaultRegistryClientConfigBuilder.start().setRegistryEndpoint(&amp;quot;127.0.0.1&amp;quot;).setRegistryEndpointPort(9603).build(); DefaultRegistryClient registryClient = new DefaultRegistryClient(config); registryClient.init(); 其中注册中心相关的属性通过 DefaultRegistryClientConfigBuilder 构建指定，该类包含以下关</description>
    </item>
    
    <item>
      <title>SOFARegistry 介绍</title>
      <link>/projects/sofa-registry/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/overview/</guid>
      <description>项目简介 SOFARegistry 是蚂蚁金服开源的一个生产级、高时效、高可用的服务注册中心。SOFARegistry 最早源自于淘宝的 ConfigServer，十年来</description>
    </item>
    
    <item>
      <title>参与贡献</title>
      <link>/projects/sofa-registry/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/contributing/</guid>
      <description>可以先去 发展路线 &amp;amp; 任务认领 内了解下开发任务及未来规划。 准备工作 贡献代码前需要先了解 git 工具的使用和 GitHub 网站的使用。 git 工具用法可以查看git官方书</description>
    </item>
    
    <item>
      <title>发展路线 &amp; 任务认领</title>
      <link>/projects/sofa-registry/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/roadmap/</guid>
      <description>发展路线 任务列表 部分内部已有的功能特性，待内部整理完毕后随各个迭代放出。 如果还没有实现的功能特性会列在下面的表格中，欢迎大家认领任务，参与贡</description>
    </item>
    
    <item>
      <title>发布说明</title>
      <link>/projects/sofa-registry/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/release-notes/</guid>
      <description>更多参见：https://github.com/sofastack/sofa-registry/releases</description>
    </item>
    
    <item>
      <title>基础术语</title>
      <link>/projects/sofa-registry/terminology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/terminology/</guid>
      <description>业界通用术语 术语 说明 服务（Service） 通过网络提供的、具有特定业务逻辑处理能力的软件功能。 服务提供者（Service Provider） 通</description>
    </item>
    
    <item>
      <title>客户端使用</title>
      <link>/projects/sofa-registry/client-quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/client-quick-start/</guid>
      <description>1. 创建 Maven 工程 服务端部署完毕后，我们可以新建一个 Maven 工程使用 SOFARegistry 提供的服务。首先新建一个 Maven 工程，然后引入如下依赖： &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alipay.sofa&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;registry-client-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${registry.client.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 2. 发布数据 // 构建客户端</description>
    </item>
    
    <item>
      <title>扩容与缩容</title>
      <link>/projects/sofa-registry/scale/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/scale/</guid>
      <description>1. 集成部署模式 1.1 扩容 registry-integration 假设目前已经部署了 3 台 registry-integration，分别是 node1/node2/node3，扩容的新节点</description>
    </item>
    
    <item>
      <title>服务端部署</title>
      <link>/projects/sofa-registry/server-quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/server-quick-start/</guid>
      <description>部署模式 SOFARegistry 支持两种部署模式，分别是集成部署模式及独立部署模式，本文将介绍最简单的单节点集成部署模式，更多更详细的部署模式介绍可以查看 部署文档</description>
    </item>
    
    <item>
      <title>版本规范</title>
      <link>/projects/sofa-registry/release-standard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/release-standard/</guid>
      <description>版本号 采用三位版本号，分别是主版本号、次版本号、修订版本号。例如 5.2.0。 参见: http://semver.org/lang/zh-CN/ 主版本号：主版本号内的所有版本必须相互兼容；与其它主版本</description>
    </item>
    
    <item>
      <title>版权声明</title>
      <link>/projects/sofa-registry/notice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/notice/</guid>
      <description>依赖组件版权说明 SOFARegistry 使用了一些三方开源组件，他们分别是： Spring under Apache 2.0 license Spring Boot under Apache 2.0 license Netty under Apache License 2.0 SLF4j under the MIT License jersey under CDDL Version 1.1 SOFAJRaft under Apache License 2.0 SOFABolt under Apache License 2.0 SOFAHessian under Apache License 2.0 &amp;hellip; 其</description>
    </item>
    
    <item>
      <title>运维命令</title>
      <link>/projects/sofa-registry/management-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/management-api/</guid>
      <description>1. registry-meta 1.1 推送开关 在注册中心新版本发布的过程中为了把对业务的影响减少到最小，避免服务端重启动引发大规模服务地址信息变更产生大量推送，我们提供运维</description>
    </item>
    
    <item>
      <title>部署</title>
      <link>/projects/sofa-registry/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/sofa-registry/deployment/</guid>
      <description>环境准备 要使用 SOFARegistry，需要先准备好基础环境，SOFARegistry 依赖以下环境： * Linux/Unix/Mac/Windows * JDK8 * 需要采用 Apache Maven 3.2.5 或者以上的版本来</description>
    </item>
    
  </channel>
</rss>